#include "pds/config/EpixConfigType.hh"

void Pds::Epix10kaConfig::setDaqCode(Epix10kaConfigType& c, uint32_t daqCode)
{
  char* buffer = new char[c._sizeof()];
  memcpy(buffer, &c, c._sizeof());
  Epix10kaConfigType* tmp = reinterpret_cast<Epix10kaConfigType*>(buffer);
  new(&c) Epix10kaConfigType(tmp->version(),
                             tmp->usePgpEvr(),
                             tmp->evrRunCode(),
                             daqCode,
                             tmp->evrRunTrigDelay(),
                             tmp->epixRunTrigDelay(),
                             tmp->dacSetting(),
                             tmp->asicGR(),
                             tmp->asicAcq(),
                             tmp->asicR0(),
                             tmp->asicPpmat(),
                             tmp->asicPpbe(),
                             tmp->asicRoClk(),
                             tmp->asicGRControl(),
                             tmp->asicAcqControl(),
                             tmp->asicR0Control(),
                             tmp->asicPpmatControl(),
                             tmp->asicPpbeControl(),
                             tmp->asicR0ClkControl(),
                             tmp->prepulseR0En(),
                             tmp->adcStreamMode(),
                             tmp->testPatternEnable(),
                             tmp->SyncMode(),
                             tmp->R0Mode(),
                             tmp->acqToAsicR0Delay(),
                             tmp->asicR0ToAsicAcq(),
                             tmp->asicAcqWidth(),
                             tmp->asicAcqLToPPmatL(),
                             tmp->asicPPmatToReadout(),
                             tmp->asicRoClkHalfT(),
                             tmp->adcReadsPerPixel(),
                             tmp->adcClkHalfT(),
                             tmp->asicR0Width(),
                             tmp->adcPipelineDelay(),
                             tmp->adcPipelineDelay0(),
                             tmp->adcPipelineDelay1(),
                             tmp->adcPipelineDelay2(),
                             tmp->adcPipelineDelay3(),
                             tmp->SyncWidth(),
                             tmp->SyncDelay(),
                             tmp->prepulseR0Width(),
                             tmp->prepulseR0Delay(),
                             tmp->digitalCardId0(),
                             tmp->digitalCardId1(),
                             tmp->analogCardId0(),
                             tmp->analogCardId1(),
                             tmp->carrierId0(),
                             tmp->carrierId1(),
                             tmp->numberOfAsicsPerRow(),
                             tmp->numberOfAsicsPerColumn(),
                             tmp->numberOfRowsPerAsic(),
                             tmp->numberOfReadableRowsPerAsic(),
                             tmp->numberOfPixelsPerAsicRow(),
                             tmp->calibrationRowCountPerASIC(),
                             tmp->environmentalRowCountPerASIC(),
                             tmp->baseClockFrequency(),
                             tmp->asicMask(),
                             tmp->enableAutomaticRunTrigger(),
                             tmp->numberOf125MhzTicksPerRunTrigger(),
                             tmp->scopeEnable(),
                             tmp->scopeTrigEdge(),
                             tmp->scopeTrigChan(),
                             tmp->scopeArmMode(),
                             tmp->scopeADCThreshold(),
                             tmp->scopeTrigHoldoff(),
                             tmp->scopeTrigOffset(),
                             tmp->scopeTraceLength(),
                             tmp->scopeADCsameplesToSkip(),
                             tmp->scopeChanAwaveformSelect(),
                             tmp->scopeChanBwaveformSelect(),
                             &tmp->asics(0),
                             tmp->asicPixelConfigArray().data(),
                             tmp->calibPixelConfigArray().data());
  delete[] buffer;
}
