#ifndef Pds_EvrFIFOHandler_hh
#define Pds_EvrFIFOHandler_hh

/*
 * Signal handler, for processing the incoming event codes, and providing interfaces for
 *   retrieving L1 data from the L1Xmitter object
 * The Master EVR process is indicated by L1Xmitter::enable.  The master is responsible
 * for sending the EvrDatagram to the other segment levels, generating the sw triggers, 
 * adding the FIFO data to the L1Accept datagram, and counting events for calibration cycles.
 * All EVR processes configure the
 * EVRs to generate hardware triggers.  The slave EVR processes only need verify that
 * their FIFO data matches the timestamp of the L1Accept generated by the master.
 */

#include "pds/config/EvrConfigType.hh" // typedefs for the Evr config data types

namespace Pds {

  class FIFOEvent;
  class InDatagram;
  class Transition;

  class EvrFIFOHandler {
  public:
    virtual ~EvrFIFOHandler() {}
  public:
    virtual void        fifo_full   () = 0;
    virtual void        fifo_event  (const FIFOEvent&) = 0;  // formerly 'xmit'
    virtual InDatagram* l1accept    (InDatagram*) = 0;
    virtual Transition* enable      (Transition*) = 0;
    virtual Transition* disable     (Transition*) = 0;
    virtual void        set_config  (const EvrConfigType*) = 0;
    virtual Transition* config      (Transition*) = 0; // config action
    virtual Transition* endcalib    (Transition*) = 0;
    virtual void        get_sync    () = 0;
    virtual void        release_sync() = 0;
  };
};

#endif
